//
//  LoginInteractor.swift
//  SpotifySearch
//
//  Created by Arash Goodarzi on 10/29/19.
//  Copyright (c) 2019 Arash Goodarzi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic: AnyObject {
    func checkLoginState(request: Login.CheckState.Request)
}

protocol LoginDataStore {
    
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
    
    var presenter: LoginPresentationLogic?
    
    func checkLoginState(request: Login.CheckState.Request) {
        
        //here because api calling is handeled by SpotifyLogn  i used Reachability for checking connction
        ReachabilityProvider.noConnection {
            let response = Login.CheckState.Response(state: nil)
            self.presenter?.presentCheckLoginState(response: response)
        }
        
        //already has token 
        if TokenProvider.value != nil {
            let response = Login.CheckState.Response(state: Result.success(true))
            self.presenter?.presentCheckLoginState(response: response)
            return
        }
        
        //try to get token
        SpotifyLoginProvider.checkLoginState { isUserLogedIn, error in
            //error
            if let error = error {
                let response = Login.CheckState.Response(state: Result.failure(error))
                self.presenter?.presentCheckLoginState(response: response)
                return
            }
            
            //no error
            let response = Login.CheckState.Response(state: Result.success(isUserLogedIn))
            self.presenter?.presentCheckLoginState(response: response)
        }
    }
    
    //end of class
}
