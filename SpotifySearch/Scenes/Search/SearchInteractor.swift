//
//  SearchInteractor.swift
//  SpotifySearch
//
//  Created by Arash Goodarzi on 10/29/19.
//  Copyright (c) 2019 Arash Goodarzi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchBusinessLogic: AnyObject {
    func searchTracks(request: Search.Tracks.Request)
    func saveTrackInDataStore(request: Search.SaveTrackInDataStore.Request)
}

protocol SearchDataStore {
    var track: ServerModels.Response.TracksModel.Item? { get set }
}

class SearchInteractor: SearchBusinessLogic, SearchDataStore {
    
    var track: ServerModels.Response.TracksModel.Item?
    var presenter: SearchPresentationLogic?
    
    func searchTracks(request: Search.Tracks.Request) {
        
        let httpRequest = HTTP.Heplers.search(trackName: request.query)
        WebServcie.request(httpRequest) { result in
            
            //error
            if let error = result.error {
                let response = Search.Tracks.Response(state: Result.failure(error))
                self.presenter?.presentSearchTracks(response: response)
                return
            }
            
            //success
            guard let tracks = result.value?.tracks?.items else {
                return
            }
            let response = Search.Tracks.Response(state: Result.success(tracks))
            self.presenter?.presentSearchTracks(response: response)
        }
    }
    
    //**
    func saveTrackInDataStore(request: Search.SaveTrackInDataStore.Request) {
        self.track = request.track
    }
    
    //end of class
}
